---
// Loading Circle
import LoadingCircle from '@components/LoadingCircle.astro'
// Localization
import i18next, { t, changeLanguage } from 'i18next'
import { HeadHrefLangs } from 'astro-i18next/components'
import '/node_modules/flag-icons/css/flag-icons.min.css'
// Navigation Component
import NavBar from '@components/Navigation/NavBar.vue'
import BurgerMenu from '@components/Navigation/BurgerMenu.vue'
import LangSelector from '@components/Navigation/LangSelector.vue'
import Title from '@components/AstroTitle.astro'
// Hero Component
import Hero from '@components/hero.astro'
// About Component
import About from '@components/about.astro'
// Skill Component
import { skills } from '@content/skills'
import Skills from '@components/Skills/Skills.vue'
// Project Component
import Projects from '@components/Projects/index.astro'
import StarredProject from '@components/Projects/starredProject.astro'
import BasicProject from '@components/Projects/basicProject.astro'
import { starredProjectsES as starredProjects } from '@content/projects'
import { basicProjectsES as basicProjects } from '@content/projects'
// Contact Component
import Contact from '@components/contact.astro'
// Footer Component
import Footer from '@components/footer.astro'
// Font Imports & Styles
import '@fontsource/dotgothic16'
import '@fontsource/jetbrains-mono'
import '../styles/styles.css'
changeLanguage('es')

// Href y Texto de los NavLinks
const navLinks = [
  { href: t('index:navLink.home.href'), text: t('index:navLink.home.text') },
  { href: t('index:navLink.aboutMe.href'), text: t('index:navLink.aboutMe.text') },
  { href: t('index:navLink.skills.href'), text: t('index:navLink.skills.text') },
  { href: t('index:navLink.projects.href'), text: t('index:navLink.projects.text') },
  { href: t('index:navLink.contact.href'), text: t('index:navLink.contact.text') }
]

// Selector de lenguajes
const selectedLang = {
  flag: t('index:langSelector.flag'),
  name: t('index:langSelector.name')
}

// Texto del selector de habilidades
const skillNames = [
  { id: 0, name: t('skills:frontend') },
  { id: 1, name: t('skills:backend') },
  { id: 2, name: t('skills:database') },
  { id: 3, name: t('skills:design') },
  { id: 4, name: t('skills:tools') }
]

// Titulos de las secciones de proyectos
const projectTitles = {
  firstTitle: t('projects:helperText.firstTitle'),
  secondTitle: t('projects:helperText.secondTitle')
}

// Texto usado en los proyectos destacados
const helperText = {
  starredText: t('projects:helperText.starredText'),
  linkText: t('projects:helperText.linkText'),
  linkTextDisabled: t('projects:helperText.linkTextDisabled'),
  githubText: t('projects:helperText.githubText'),
  technologiesText: t('projects:helperText.technologiesText')
}
---

<!DOCTYPE html>
<html lang={i18next.language}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={t('index:head.description')} />
    <title>{t('index:head.title')}</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.15.1/devicon.min.css"
    />
    <script src="@js/main.js"></script>
    <script src="@js/alpineComponents.js"></script>
    <HeadHrefLangs />
  </head>

  <body class="overflow-hidden">
    <!-- Loading Circle -->
    <LoadingCircle />
    <!-- Header -->
    <header>
      <NavBar client:load navigation={navLinks}>
        <LangSelector client:load slot="lang-selector" selectedLang={selectedLang} />
        <BurgerMenu client:load slot="burger-menu" navigation={navLinks} />
      </NavBar>
    </header>
    <!-- Main Content -->
    <main class="page">
      <!-- Hero Section -->
      <section class="flex flex-col -z-10 md:flex-row justify-between items-center mx-auto">
        <Hero name={t('hero:name')} title={t('hero:title')} />
      </section>
      <!-- About Me Section -->
      <Title id={t('index:sections.about.id')} title={t('index:sections.about.title')} />
      <section class="flex flex-col md:flex-row justify-between items-center mx-auto px-6 pt-8">
        <About text={t('about:content')} />
      </section>
      <!-- Skill Section -->
      <Title id={t('index:sections.skills.id')} title={t('index:sections.skills.title')} />
      <section>
        <Skills client:load skillTypes={skillNames} skillGroups={skills} />
      </section>
      <!-- Project Section -->
      <Title id={t('index:sections.projects.id')} title={t('index:sections.projects.title')} />
      <section>
        <Projects titles={projectTitles}>
          <div class="flex flex-col w-11/12 space-y-3" slot="starred-projects">
            <!-- Starred Project -->
            {
              starredProjects.map((starredProject) => (
                <StarredProject projectDetails={starredProject} helperText={helperText} />
              ))
            }
          </div>
          <div
            class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 items-start"
            slot="basic-projects"
          >
            <!-- Basic Project -->
            {basicProjects.map((basicProject) => <BasicProject projectDetails={basicProject} />)}
          </div>
        </Projects>
      </section>
      <!-- Contact Section -->
      <Title id={t('index:sections.contact.id')} title={t('index:sections.contact.title')} />
      <section class="p-6 font-sans md:text-xl">
        <Contact info={t('contact:info')} button={t('contact:button')} href={t('contact:pdf')} />
      </section>
    </main>
    <!-- Footer -->
    <Footer
      copyright={t('index:footer.copyright')}
      powered={t('index:footer.powered')}
      author={t('index:footer.author')}
    />
  </body>
</html>
