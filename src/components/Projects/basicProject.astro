---
import Tag from './tag.astro'
interface Props {
  projectDetails: {
    title: string
    link?: string
    github: string
    tags: Array<string>
    description: string
  }
}
const {
  projectDetails: { title, link, github, tags, description }
} = Astro.props
---

<div
  class="flex flex-col md:w-96 md:h-96 justify-around space-y-4 py-4 px-6 bg-item rounded-xl border-secondary border-2 shadow-2xl shadow-item"
>
  <div class="flex justify-between text-xl md:text-2xl">
    <h3>{title}</h3>
    <div x-data="hasLink" id="links" class="text-primary">
      <template x-if={`hasLink('${link}')`}>
        <a target="_blank" href={link} class="icon-external-link"></a>
      </template>
      <template x-if={`!hasLink('${link}')`}>
        <button class="icon-external-link text-gray-500" disabled></button>
      </template>
      <a target="_blank" href={github} class="icon-github"></a>
    </div>
  </div>
  <div x-data="minifiedContent">
    <p x-init={`setMinifyContent('${description}')`}>
      <span class="overflow-hidden" x-text={`!isCollapsed ? '${description}' : minContent`}></span>
      <button
        class="text-highlight"
        x-show="length > maxLength"
        x-on:click="toggleShow()"
        x-text="!isCollapsed ? 'Ver menos' : '...Ver mÃ¡s'"></button>
    </p>
  </div>
  <div id="tags" class="flex flex-wrap text-xs">
    {tags.map((tag: string) => <Tag text={tag} />)}
  </div>
</div>
